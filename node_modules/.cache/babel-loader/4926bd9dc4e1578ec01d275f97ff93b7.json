{"remainingRequest":"/Users/adamhorne/Desktop/studentscan-master-2/node_modules/thread-loader/dist/cjs.js!/Users/adamhorne/Desktop/studentscan-master-2/node_modules/babel-loader/lib/index.js!/Users/adamhorne/Desktop/studentscan-master-2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/adamhorne/Desktop/studentscan-master-2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/adamhorne/Desktop/studentscan-master-2/node_modules/vue-quaggajs/src/Scanner.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/adamhorne/Desktop/studentscan-master-2/node_modules/vue-quaggajs/src/Scanner.vue","mtime":499162500000},{"path":"/Users/adamhorne/Desktop/studentscan-master-2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/adamhorne/Desktop/studentscan-master-2/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/adamhorne/Desktop/studentscan-master-2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/adamhorne/Desktop/studentscan-master-2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/adamhorne/Desktop/studentscan-master-2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFF1YWdnYSBmcm9tICdxdWFnZ2EnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1F1YWdnYVNjYW5uZXInLAogIHByb3BzOiB7CiAgICBvbkRldGVjdGVkOiB7CiAgICAgIHR5cGU6IEZ1bmN0aW9uLAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdChyZXN1bHQpIHsKICAgICAgICBjb25zb2xlLmxvZygnZGV0ZWN0ZWQ6ICcsIHJlc3VsdCk7CiAgICAgIH0KICAgIH0sCiAgICBvblByb2Nlc3NlZDogewogICAgICB0eXBlOiBGdW5jdGlvbiwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQocmVzdWx0KSB7CiAgICAgICAgdmFyIGRyYXdpbmdDdHggPSBRdWFnZ2EuY2FudmFzLmN0eC5vdmVybGF5OwogICAgICAgIHZhciBkcmF3aW5nQ2FudmFzID0gUXVhZ2dhLmNhbnZhcy5kb20ub3ZlcmxheTsKCiAgICAgICAgaWYgKHJlc3VsdCkgewogICAgICAgICAgaWYgKHJlc3VsdC5ib3hlcykgewogICAgICAgICAgICBkcmF3aW5nQ3R4LmNsZWFyUmVjdCgwLCAwLCBwYXJzZUludChkcmF3aW5nQ2FudmFzLmdldEF0dHJpYnV0ZSgnd2lkdGgnKSksIHBhcnNlSW50KGRyYXdpbmdDYW52YXMuZ2V0QXR0cmlidXRlKCdoZWlnaHQnKSkpOwogICAgICAgICAgICByZXN1bHQuYm94ZXMuZmlsdGVyKGZ1bmN0aW9uIChib3gpIHsKICAgICAgICAgICAgICByZXR1cm4gYm94ICE9PSByZXN1bHQuYm94OwogICAgICAgICAgICB9KS5mb3JFYWNoKGZ1bmN0aW9uIChib3gpIHsKICAgICAgICAgICAgICBRdWFnZ2EuSW1hZ2VEZWJ1Zy5kcmF3UGF0aChib3gsIHsKICAgICAgICAgICAgICAgIHg6IDAsCiAgICAgICAgICAgICAgICB5OiAxCiAgICAgICAgICAgICAgfSwgZHJhd2luZ0N0eCwgewogICAgICAgICAgICAgICAgY29sb3I6ICdncmVlbicsCiAgICAgICAgICAgICAgICBsaW5lV2lkdGg6IDIKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHJlc3VsdC5ib3gpIHsKICAgICAgICAgICAgUXVhZ2dhLkltYWdlRGVidWcuZHJhd1BhdGgocmVzdWx0LmJveCwgewogICAgICAgICAgICAgIHg6IDAsCiAgICAgICAgICAgICAgeTogMQogICAgICAgICAgICB9LCBkcmF3aW5nQ3R4LCB7CiAgICAgICAgICAgICAgY29sb3I6ICcjMDBGJywKICAgICAgICAgICAgICBsaW5lV2lkdGg6IDIKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHJlc3VsdC5jb2RlUmVzdWx0ICYmIHJlc3VsdC5jb2RlUmVzdWx0LmNvZGUpIHsKICAgICAgICAgICAgUXVhZ2dhLkltYWdlRGVidWcuZHJhd1BhdGgocmVzdWx0LmxpbmUsIHsKICAgICAgICAgICAgICB4OiAneCcsCiAgICAgICAgICAgICAgeTogJ3knCiAgICAgICAgICAgIH0sIGRyYXdpbmdDdHgsIHsKICAgICAgICAgICAgICBjb2xvcjogJ3JlZCcsCiAgICAgICAgICAgICAgbGluZVdpZHRoOiAzCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIHJlYWRlclR5cGVzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gWydjb2RlXzEyOF9yZWFkZXInXTsKICAgICAgfQogICAgfSwKICAgIHJlYWRlclNpemU6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgd2lkdGg6IDY0MCwKICAgICAgICAgIGhlaWdodDogNDgwCiAgICAgICAgfTsKICAgICAgfSwKICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbiB2YWxpZGF0b3IobykgewogICAgICAgIHJldHVybiB0eXBlb2Ygby53aWR0aCA9PT0gJ251bWJlcicgJiYgdHlwZW9mIG8uaGVpZ2h0ID09PSAnbnVtYmVyJzsKICAgICAgfQogICAgfSwKICAgIGFzcGVjdFJhdGlvOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIG1pbjogMSwKICAgICAgICAgIG1heDogMgogICAgICAgIH07CiAgICAgIH0sCiAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24gdmFsaWRhdG9yKG8pIHsKICAgICAgICByZXR1cm4gdHlwZW9mIG8ubWluID09PSAnbnVtYmVyJyAmJiB0eXBlb2Ygby5tYXggPT09ICdudW1iZXInOwogICAgICB9CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcXVhZ2dhU3RhdGU6IHsKICAgICAgICBpbnB1dFN0cmVhbTogewogICAgICAgICAgdHlwZTogJ0xpdmVTdHJlYW0nLAogICAgICAgICAgY29uc3RyYWludHM6IHsKICAgICAgICAgICAgd2lkdGg6IHsKICAgICAgICAgICAgICBtaW46IHRoaXMucmVhZGVyU2l6ZS53aWR0aAogICAgICAgICAgICB9LAogICAgICAgICAgICBoZWlnaHQ6IHsKICAgICAgICAgICAgICBtaW46IHRoaXMucmVhZGVyU2l6ZS5oZWlnaHQKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZmFjaW5nTW9kZTogJ2Vudmlyb25tZW50JywKICAgICAgICAgICAgYXNwZWN0UmF0aW86IHsKICAgICAgICAgICAgICBtaW46IDEsCiAgICAgICAgICAgICAgbWF4OiAyCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGxvY2F0b3I6IHsKICAgICAgICAgIHBhdGNoU2l6ZTogJ21lZGl1bScsCiAgICAgICAgICBoYWxmU2FtcGxlOiB0cnVlCiAgICAgICAgfSwKICAgICAgICBudW1PZldvcmtlcnM6IDIsCiAgICAgICAgZnJlcXVlbmN5OiAxMCwKICAgICAgICBkZWNvZGVyOiB7CiAgICAgICAgICByZWFkZXJzOiB0aGlzLnJlYWRlclR5cGVzCiAgICAgICAgfSwKICAgICAgICBsb2NhdGU6IHRydWUKICAgICAgfQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICBRdWFnZ2EuaW5pdCh0aGlzLnF1YWdnYVN0YXRlLCBmdW5jdGlvbiAoZXJyKSB7CiAgICAgIGlmIChlcnIpIHsKICAgICAgICByZXR1cm4gY29uc29sZS5lcnJvcihlcnIpOwogICAgICB9CgogICAgICBRdWFnZ2Euc3RhcnQoKTsKICAgIH0pOwogICAgUXVhZ2dhLm9uRGV0ZWN0ZWQodGhpcy5vbkRldGVjdGVkKTsKICAgIFF1YWdnYS5vblByb2Nlc3NlZCh0aGlzLm9uUHJvY2Vzc2VkKTsKICB9LAogIGRlc3Ryb3llZDogZnVuY3Rpb24gZGVzdHJveWVkKCkgewogICAgUXVhZ2dhLnN0b3AoKTsKICB9Cn07"},{"version":3,"sources":["Scanner.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"interactive\" class=\"viewport scanner\">\n    <video />\n    <canvas class=\"drawingBuffer\" />\n  </div>\n</template>\n\n<script>\nimport Quagga from 'quagga';\n\nexport default {\n  name: 'QuaggaScanner',\n  props: {\n    onDetected: {\n      type: Function,\n      default(result) {\n        console.log('detected: ', result);\n      },\n    },\n    onProcessed: {\n      type: Function,\n      default(result) {\n        let drawingCtx = Quagga.canvas.ctx.overlay;\n\n        let drawingCanvas = Quagga.canvas.dom.overlay;\n\n        if (result) {\n          if (result.boxes) {\n            drawingCtx.clearRect(\n              0,\n              0,\n              parseInt(drawingCanvas.getAttribute('width')),\n              parseInt(drawingCanvas.getAttribute('height'))\n            );\n            result.boxes\n              .filter(function(box) {\n                return box !== result.box;\n              })\n              .forEach(function(box) {\n                Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, {\n                  color: 'green',\n                  lineWidth: 2,\n                });\n              });\n          }\n          if (result.box) {\n            Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, {\n              color: '#00F',\n              lineWidth: 2,\n            });\n          }\n\n          if (result.codeResult && result.codeResult.code) {\n            Quagga.ImageDebug.drawPath(\n              result.line,\n              { x: 'x', y: 'y' },\n              drawingCtx,\n              { color: 'red', lineWidth: 3 }\n            );\n          }\n        }\n      },\n    },\n    readerTypes: {\n      type: Array,\n      default: () => ['code_128_reader'],\n    },\n    readerSize: {\n      type: Object,\n      default: () => ({\n        width: 640,\n        height: 480,\n      }),\n      validator: o =>\n        typeof o.width === 'number' && typeof o.height === 'number',\n    },\n    aspectRatio: {\n      type: Object,\n      default: () => ({\n        min: 1,\n        max: 2,\n      }),\n      validator: o => typeof o.min === 'number' && typeof o.max === 'number',\n    },\n  },\n  data: function() {\n    return {\n      quaggaState: {\n        inputStream: {\n          type: 'LiveStream',\n          constraints: {\n            width: { min: this.readerSize.width },\n            height: { min: this.readerSize.height },\n            facingMode: 'environment',\n            aspectRatio: { min: 1, max: 2 },\n          },\n        },\n        locator: {\n          patchSize: 'medium',\n          halfSample: true,\n        },\n        numOfWorkers: 2,\n        frequency: 10,\n        decoder: {\n          readers: this.readerTypes,\n        },\n        locate: true,\n      },\n    };\n  },\n  mounted: function() {\n    Quagga.init(this.quaggaState, function(err) {\n      if (err) {\n        return console.error(err);\n      }\n      Quagga.start();\n    });\n    Quagga.onDetected(this.onDetected);\n    Quagga.onProcessed(this.onProcessed);\n  },\n  destroyed: function() {\n    Quagga.stop();\n  },\n};\n</script>\n\n<style scoped>\n.viewport {\n  position: relative;\n}\n\n.viewport canvas,\n.viewport video {\n  position: absolute;\n  left: 0;\n  top: 0;\n}\n</style>\n"],"sourceRoot":"node_modules/vue-quaggajs/src"}]}